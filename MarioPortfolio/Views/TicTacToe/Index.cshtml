@model Dictionary<string, MarioPortfolio.Models.TicTacToe.TTTLeaderboards>[]

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="card mb-5 p-4 box-shadow">
    <div class="text-center">
        <label class="h1 text-success">Play</label>
    </div>
    <div class="row container m-0">
        <div class="card col-lg-6 border-0 mt-1 mb-1">
            <a asp-action="Easy" asp-route-id="@Guid.NewGuid()" class="btn btn-primary"><h3>Easy</h3></a>
        </div>
        <div class="card col-lg-6 border-0 mt-1 mb-1">
            <a asp-action="NotSoEasy" asp-route-id="@Guid.NewGuid()" class="btn btn-primary"> <h3>Not so Easy</h3></a>
        </div>
    </div>
</div>
<h1 class="text-center">Top 10</h1>
<div class="card text-center">
    <div class="card-header">
        <ul class="nav nav-tabs card-header-tabs">
            <li class="nav-item">
                <a class="nav-link active" id="tab-easy" href="#">Easy</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" id="tab-not-so-easy" href="#">Not so Easy</a>
            </li>
        </ul>
    </div>
    <div class="card-body">
        <div id="easy-leaderboards">
            <table class="table">
                <thead>
                    <tr>
                        <th class="text-center">
                            @Html.DisplayNameFor(model => model[0].First().Key)
                        </th>
                        <th class="text-center">
                            @Html.DisplayNameFor(model => model[0].First().Value.WinCountEasy)
                        </th>
                        <th class="text-center">
                            WinRate
                        </th>
                        <th class="text-center">
                            @Html.DisplayNameFor(model => model[0].First().Value.GameCountEasy)
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @try
                    {
                        if (Model != null)
                        {
                            foreach (var item in Model[0].Take(10).ToList())
                            {
                                <tr>
                                    <td class="text-center">
                                        @Html.DisplayFor(modelItem => item.Key)
                                    </td>
                                    <td class="text-center">
                                        @Html.DisplayFor(modelItem => item.Value.WinCountEasy)
                                    </td>
                                    <td class="text-center">
                                        @Math.Round((double)item.Value.WinCountEasy / (double)item.Value.GameCountEasy * 100.0f, 2)%
                                    </td>
                                    <td class="text-center">
                                        @Html.DisplayFor(modelItem => item.Value.GameCountEasy)
                                    </td>
                                </tr>
                            }
                        }
                    }
                    //empty list on easy leaderboards
                    catch (Exception e)
                    {
                        throw e;
                    }
                </tbody>
            </table>
        </div>
        <div id="not-so-easy-leaderboards" class="hide">
            <table class="table">
                <thead>
                    <tr>
                        <th class="text-center">
                            @Html.DisplayNameFor(model => model[1].First().Key)
                        </th>
                        <th class="text-center">
                            @Html.DisplayNameFor(model => model[1].First().Value.WinCount)
                        </th>
                        <th class="text-center">
                            WinRate
                        </th>
                        <th class="text-center">
                            @Html.DisplayNameFor(model => model[1].First().Value.GameCount)
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @try
                    {
                        foreach (var item in Model[1].Take(10).ToList())
                        {
                            <tr>
                                <td class="text-center">
                                    @Html.DisplayFor(modelItem => item.Key)
                                </td>
                                <td class="text-center">
                                    @Html.DisplayFor(modelItem => item.Value.WinCount)
                                </td>
                                <td class="text-center">
                                    @Math.Round((double)item.Value.WinCount / (double)item.Value.GameCount * 100.0f, 2)%
                                </td>
                                <td class="text-center">
                                    @Html.DisplayFor(modelItem => item.Value.GameCount)
                                </td>
                            </tr>
                        }
                    }
                    //empty list on not so easy leaderboards.
                    catch { }
                </tbody>
            </table>
        </div>
    </div>
</div>
